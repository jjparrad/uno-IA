
- Explore Godot
- Create the repository
- Deck of cards
- 2 slots for players
- Card dealing
	- Cards of the players
	- Cards in the center
	- Discard cards
	- First card
- Who starts?
- Turns
	- Look at previous player action
	- Timer (not priority)
	- See possibilities
	- Place a card or take a card
	- Check UNO! (not priority)
	- Check win
	- Do action


Game Manager
	functions
		allowAction
			Should check if the action that the cpu wants to do is valid or not
		continue
			Should check win conditions and tell next player to start their turn
	
Cards Dealer
	functions
		remixCards
			Should mix the cards in the Used Cards deck and fill the Available cards deck
		dealCards
			Should mix all the cards and fill the CPUs' cards
		
CPU Players
	functions
		startTurn
			Should look into its card stack, the size of the oponent's stack and the used Cards and decide
			Must call GameManager.allowAction
			
Cards
	attributes
		cards: array/list of cards
		size: number of remaining cards
	functions:
		take: return last card and size--
		peek: return last card
		choose: return card at index X and size--




CPU PLAYER AGENT PSEUDO CODE:

var lastActivePlayer
var playerId

func _process(delta: float) -> void:
	if (gameManager.pause) {
		return
	}
	
	if (lastActivePlayer != lastActivePlayer && jeReflechie()) {
		arreterDeReflechir()
	}
	
	if (jeReflechie()) {
		return
	}
	
	GameEnvironement gameEnv = gameManager.getEnvironment();
	reflechir()
	if (gameEnv.cestAMoi) {
		gameManager.jeJoue()
		jouer()
	} else if (canSteal(gameEnv)) {
		gameManager.stealTurn(playerId)
		jouer()
	}
